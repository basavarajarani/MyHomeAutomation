import org.eclipse.smarthome.core.library.types.DecimalType

var wuKey = "8ac6c3f2b12d16cc"
var Timer VeggiePatchTimer = null
var wuCity = "Berwick"

/**
 * Procedure to retrieve the WeatherForecast
 */
val org.eclipse.xtext.xbase.lib.Procedures$Procedure2 <String,String> retrieveWeatherForecast = [ 
	String apiKey,
	String wuCity|
	
	logDebug("HomeAutomation","Invoking retrieveWeatherForecast");

	var String wuFeature="forecast"

	var String wuTodaysWeatherForecastJson = sendHttpGetRequest("http://api.wunderground.com/api/"+apiKey+"/"+wuFeature+"/q/Australia/"+wuCity+".json")
//	var String wuURL = "http://api.wunderground.com/api/"+apiKey+"/"+wuFeature+"/q/Australia/"+wuCity+".json"
	
	//var String wuTodaysWeatherForecastJson = sendHttpGetRequest("http://api.wunderground.com/api/8ac6c3f2b12d16cc/forecast/q/Australia/Berwick.json")
	//logDebug("HomeAutomation","Json:"+wuTodaysWeatherForecastJson)
//	var String wuTodaysWeatherForecastJson = sendHttpGetRequest("http://api.wunderground.com/api/8ac6c3f2b12d16cc/forecast/q/Australia/Berwick.json")
	var float melb_high_c	= Float.valueOf(transform("JSONPATH","$.forecast.simpleforecast.forecastday[0].high.celsius",wuTodaysWeatherForecastJson))
	var float melb_low_c    = Float.valueOf(transform("JSONPATH","$.forecast.simpleforecast.forecastday[0].low.celsius",wuTodaysWeatherForecastJson))
	var float melb_rain_mm  = Float.valueOf(transform("JSONPATH","$.forecast.simpleforecast.forecastday[0].qpf_allday.mm",wuTodaysWeatherForecastJson))
	var float melb_rain_pop = Float.valueOf(transform("JSONPATH","$.forecast.simpleforecast.forecastday[0].pop",wuTodaysWeatherForecastJson))
	Melbourne_Weather_High_In_Celcius.postUpdate(melb_high_c)
    Melbourne_Weather_Low_In_Celcius.postUpdate(melb_low_c)
    Melbourne_Weather_Rain_In_MM.postUpdate(melb_rain_mm)	
    Melbourne_Weather_POP.postUpdate(melb_rain_pop) 
    
   // logDebug("HomeAutomation","Melbourne_Weather_POP:"+Melbourne_Weather_POP.state)
]

/*
 * Procedure to retrieve the WeatherConditions
 */
val org.eclipse.xtext.xbase.lib.Procedures$Procedure2 <String,String> retrieveWeatherConditions = [
	String apiKey,
	String wuCity |
	
	logDebug("HomeAutomation","Invoking retrieveWeatherConditions"); 
	
	var String wuFeature="conditions"
	var String wuWeatherConditionJson = sendHttpGetRequest("http://api.wunderground.com/api/"+apiKey+"/"+wuFeature+"/q/Australia/"+wuCity+".json")
		
	var float currentTempInCelcius = Float.valueOf(transform("JSONPATH","$.current_observation.temp_c",wuWeatherConditionJson))
	var float currentRainInMM = Float.valueOf(transform("JSONPATH","$.current_observation.precip_1hr_metric",wuWeatherConditionJson))
	
	Melbourne_Weather_Current_Temp_In_Celcius.postUpdate(currentTempInCelcius)	
	Melbourne_Weather_Current_Rain_In_MM.postUpdate(currentRainInMM)
	
	var Number Rain_Last_12_Hours = Melbourne_Weather_Current_Rain_In_MM.averageSince(now.minusHours(12))
	Melbourne_Weather_Rain_Last_12_Hours.postUpdate(Rain_Last_12_Hours.intValue)	
	
	
	var Number Max_Rain_Last_12_Hours = Melbourne_Weather_Current_Rain_In_MM.maximumSince(now.minusHours(12)).state as DecimalType
	Melbourne_Weather_Max_Rain_Last_12_Hours.postUpdate(Max_Rain_Last_12_Hours)
	
	var Number Min_Rain_Last_12_Hours = Melbourne_Weather_Current_Rain_In_MM.minimumSince(now.minusHours(12)).state as DecimalType
	Melbourne_Weather_Min_Rain_Last_12_Hours.postUpdate(Min_Rain_Last_12_Hours)
	
	
	logDebug("HomeAutomation","Exiting retrieveWeatherConditions");
]

/*
 * Rule Name: SystemStarted
 * Executed: When the openhab2 starts
 * Description:
 * 			1. Reads the weather from the underground
 * 			2. Reads the High,Low, Current Temperatures
 * 			3. Reads the Rain in % and mm
 */
rule SystemStarted
when
	System started
then
	retrieveWeatherForecast.apply(wuKey,wuCity)
	retrieveWeatherConditions.apply(wuKey,wuCity)

end

/*
 * Rule Name: UpdateMelbourneDailyWeatherAT6AM
 * Executed: Once a day - 5:50am
 * Description: Retrieves the High/Low temperatures and Today's Rain
 * 				and persists them.
 */

rule UpdateMelbourneDailyWeatherAT6AM
when
	Time cron "0 50 5 * * ?"
then
	retrieveWeatherForecast.apply(wuKey,wuCity)
end

/*
 * Rule Name: UpdateMelbourneCurrentTemp
 * Executed : Every Hour
 * Description: Reads the WU Current Temperature and Stores it in Melbourne_Weather_Current_Temp_In_Celcius
 */
rule UpdateMelbourneCurrentTemp
when 
	Time cron "0 0 0/1 * * ?"
then
	retrieveWeatherConditions.apply(wuKey,wuCity)
	

end