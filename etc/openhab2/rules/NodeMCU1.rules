/************************************************************************************************************************
 * Begin of Utility Functions/Procedures
 *************************************************************************************************************************/
 
/*
 * Procedure to Turn on the Switch with the run time in Minutes
 */
val org.eclipse.xtext.xbase.lib.Procedures$Procedure2 <SwitchItem, Number> turnOnSwitchWithRunTimerInMinutes = [ 
	SwitchItem switchItem,
	Number timerValueInMinutes |
	logDebug("HomeAutomation","Entering turnOnSwitchWithRunTimerInMinutes with params ["+switchItem.name+","+timerValueInMinutes+"]");
	sendCommand(switchItem,ON);

	var Timer switchTimer = createTimer(now.plusMinutes(timerValueInMinutes.intValue),[| 
										sendCommand(switchItem,OFF)										
										])	
										
	logDebug("HomeAutomation","Exiting turnOnSwitchWithRunTimerInMinutes with params ["+switchItem.name+","+timerValueInMinutes+"]");
										
]

/*
 * Procedure to Turn on the Switch with the run time in Seconds
 */
val org.eclipse.xtext.xbase.lib.Procedures$Procedure2 <SwitchItem, Number> turnOnSwitchWithRunTimerInSeconds = [ 
	SwitchItem switchItem,
	Number timerValueInSeconds |
	logDebug("HomeAutomation","Entering turnOnSwitchWithRunTimerInSeconds with params ["+switchItem.name+","+timerValueInSeconds+"]");
	
	sendCommand(switchItem,ON);

	var Timer switchTimer = createTimer(now.plusSeconds(timerValueInSeconds.intValue),[| 
										sendCommand(switchItem,OFF)										
										])	
	logDebug("HomeAutomation","Exiting turnOnSwitchWithRunTimerInSeconds with params ["+switchItem.name+","+timerValueInSeconds+"]");
										
]

/*
 * Procedure to configure the Switch1OnTapTimer
 */
val org.eclipse.xtext.xbase.lib.Procedures$Procedure0 calculateSwitch1TimerToday = [ |
	
	var Number Current_Temp = Melbourne_Weather_Current_Temp_In_Celcius.state as DecimalType
	var Number High_Temp = Melbourne_Weather_High_In_Celcius.state as DecimalType
	var Number Low_Temp = Melbourne_Weather_Low_In_Celcius.state as DecimalType
	var Number derivedTemperature =( (Low_Temp+High_Temp)/2 + Current_Temp)/2;	
	var Number derivedTemperatureTimer = Math.ceil((derivedTemperature/10).doubleValue)
	postUpdate(NodeMCU1_Switch1_Timer,derivedTemperatureTimer)
]

/*
 * Procedure to configure the Switch2OnTapTimer
 */
val org.eclipse.xtext.xbase.lib.Procedures$Procedure0 calculateSwitch2TimerToday = [ |
	
	var Number Current_Temp = Melbourne_Weather_Current_Temp_In_Celcius.state as DecimalType
	var Number High_Temp = Melbourne_Weather_High_In_Celcius.state as DecimalType
	var Number Low_Temp = Melbourne_Weather_Low_In_Celcius.state as DecimalType
	var Number derivedTemperature =( (Low_Temp+High_Temp)/2 + Current_Temp)/2;	
	var Number derivedTemperatureTimer = Math.ceil((derivedTemperature/10).doubleValue)
	postUpdate(NodeMCU1_Switch2_Timer,derivedTemperatureTimer)
]

/*
 * Procedure to configure the Switch3OnTapTimer
 */
val org.eclipse.xtext.xbase.lib.Procedures$Procedure0 calculateSwitch3TimerToday = [ |
	
	var Number Current_Temp = Melbourne_Weather_Current_Temp_In_Celcius.state as DecimalType
	var Number High_Temp = Melbourne_Weather_High_In_Celcius.state as DecimalType
	var Number Low_Temp = Melbourne_Weather_Low_In_Celcius.state as DecimalType
	var Number derivedTemperature =( (Low_Temp+High_Temp)/2 + Current_Temp)/2;	
	var Number derivedTemperatureTimer = Math.ceil((derivedTemperature/10).doubleValue)
	
	postUpdate(NodeMCU1_Switch3_Timer,derivedTemperatureTimer)
]

/*
 * Procedure to configure the Switch4OnTapTimer
 */
val org.eclipse.xtext.xbase.lib.Procedures$Procedure0 calculateSwitch4TimerToday = [ |
	
	var Number Current_Temp = Melbourne_Weather_Current_Temp_In_Celcius.state as DecimalType
	var Number High_Temp = Melbourne_Weather_High_In_Celcius.state as DecimalType
	var Number Low_Temp = Melbourne_Weather_Low_In_Celcius.state as DecimalType
	var Number derivedTemperature =( (Low_Temp+High_Temp)/2 + Current_Temp)/2;	
	var Number derivedTemperatureTimer = Math.ceil((derivedTemperature/10).doubleValue)
	
	postUpdate(NodeMCU1_Switch4_Timer,derivedTemperatureTimer)
]
/************************************************************************************************************************
 * End of Utility Functions/Procedures
 *************************************************************************************************************************/

rule UpdateTapSwitchOnTimings
when
	System started
then
	calculateSwitch1TimerToday.apply()
	calculateSwitch2TimerToday.apply()
	calculateSwitch3TimerToday.apply()
	calculateSwitch4TimerToday.apply()
end


rule ScheduleNodeMCU1Switches
when
	Time cron "0 0/1 * * * ?"
then

	
	/*
	 * ********************************************************************************************************************
	 * NodeMCU1 Switch1 Section
	 * ********************************************************************************************************************
	 */
	 
	/* 
	 * Calculate the NodeMCU1 Switch1 timer
	 * If the timer has to depend only on the derivedTemperature then use the below
	 */
	 
	turnOnSwitchWithRunTimerInSeconds.apply(NodeMCU1_Switch1,NodeMCU1_Switch1_Timer.state as DecimalType)
										
	/*
	 * ********************************************************************************************************************
	 * NodeMCU1 Switch2 Section
	 * ********************************************************************************************************************
	 */	

	turnOnSwitchWithRunTimerInSeconds.apply(NodeMCU1_Switch2,NodeMCU1_Switch2_Timer.state as DecimalType)
				
	/*
	 * ********************************************************************************************************************
	 * NodeMCU1 Switch3 Section
	 * ********************************************************************************************************************
	 */											

	turnOnSwitchWithRunTimerInSeconds.apply(NodeMCU1_Switch3,NodeMCU1_Switch3_Timer.state as DecimalType)
	/*
	 * ********************************************************************************************************************
	 * NodeMCU1 Switch4 Section
	 * ********************************************************************************************************************
	 */							

	turnOnSwitchWithRunTimerInSeconds.apply(NodeMCU1_Switch4,NodeMCU1_Switch4_Timer.state as DecimalType)																					
end